{"remainingRequest":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\src\\components\\basic.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\src\\components\\basic.vue","mtime":1606788065823},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9TGF0byZkaXNwbGF5PXN3YXAnKTsKCiNiYXNpYyB7CiAgd2lkdGg6IDEwMCU7CiAgbWFyZ2luOiAwOwp9CgojYXJlYSB7CiAgd2lkdGg6IDEyNDVweDsKfQoKLmJ0biB7CiAgYm9yZGVyOiAwOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGxldHRlci1zcGFjaW5nOiAuNXB4OwogIG1hcmdpbjogMiUgMiU7CiAgcGFkZGluZzogMTFweCAzMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICMzZTYwNmY7CiAgY29sb3I6ICNlYWVhZWE7CiAgZm9udC1mYW1pbHk6IExhdG8sIFJvYm90bywgIk9wZW4gU2FucyIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsKICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsKICBmb250LXNpemU6IDE4cHg7Cn0KCi5idG46aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICM1ZTgwOGY7Cn0KCiNmb3JtLWNvbnRhaW5lciB7CiAgZGlzcGxheTogYmxvY2s7CiAgd2lkdGg6IDQ1JTsKICBtYXJnaW46IDAgYXV0bzsKfQoKI3Jlc3VsdCBpbnB1dCwgc2VsZWN0IHsKICBib3JkZXI6IDFweCBzb2xpZCAjYzZjOWNjOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBjb2xvcjogIzU1NTsKICBkaXNwbGF5OiBibG9jazsKICBtYXJnaW46IDElIDAgNCUgMDsKICBwYWRkaW5nOiAxJSAyJTsKfQoKLnNlcGFyYXRlZCB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoKI2Nsb3NlLWNvbnRhaW5lciB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgojcmVzdWx0IGxhYmVsIHsKICBjb2xvcjogIzNlNjA2ZjsKICBmb250LWZhbWlseTogTGF0bywgUm9ib3RvLCAiT3BlbiBTYW5zIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwp9CgojcmVzdWx0IGZpZWxkc2V0IHsKICBib3JkZXI6IDFweCBzb2xpZCAjYzZjOWNjOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBtYXJnaW46IDIlIDA7Cn0KCi50ZXh0X190aXRsZSB7CiAgZm9udC1zaXplOiAyNHB4OwogIGxpbmUtaGVpZ2h0OiA0NHB4OwogIGNvbG9yOiAjM2U2MDZmOwogIG1hcmdpbjogMDsKICBmb250LWZhbWlseTogTGF0bywgUm9ib3RvLCAiT3BlbiBTYW5zIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOwp9CgoudGV4dF9fdGl0bGUgewogICAgZm9udC1zaXplOiAxNnB4OwogICAgbGluZS1oZWlnaHQ6IDIycHg7CiAgfQoKICAjYXJlYSB7CiAgICB3aWR0aDogMzIwcHg7CiAgfQoKICAuYnRuIHsKICAgIGZvbnQtc2l6ZTogMTJweDsKICB9CgogIC5lbXB0eS1yZXN1bHRzIHsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGZvbnQtc2l6ZTogMjRweDsKICAgIGxpbmUtaGVpZ2h0OiA0NHB4OwogICAgY29sb3I6ICMzZTYwNmY7CiAgICBtYXJnaW46IDA7CiAgICBmb250LWZhbWlseTogTGF0bywgUm9ib3RvLCAiT3BlbiBTYW5zIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogIH0KCkBtZWRpYSBvbmx5IGFsbCBhbmQgKG1pbi13aWR0aDogNjQzcHgpIGFuZCAobWF4LXdpZHRoOiAxMjQ0cHgpIHsKCiAgLnRleHRfX3RpdGxlIHsKICAgIGZvbnQtc2l6ZTogMThweDsKICAgIGxpbmUtaGVpZ2h0OiAzMnB4OwogIH0KCiAgI2FyZWEgewogICAgd2lkdGg6IDY0M3B4OwogIH0KCiAgLmJ0biB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgfQoKICAuZW1wdHktcmVzdWx0cyB7CiAgICBmb250LXNpemU6IDE4cHg7CiAgICBsaW5lLWhlaWdodDogMzJweDsKICB9Cn0KCkBtZWRpYSBvbmx5IGFsbCBhbmQgKG1heC13aWR0aDogNjQycHgpIHsKICAjcmVzdWx0IHsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgbWFyZ2luOiAwIGF1dG87CiAgfQoKICAuZW1wdHktcmVzdWx0cyB7CiAgICBmb250LXNpemU6IDEyOwogICAgbGluZS1oZWlnaHQ6IDIycHg7CiAgfQp9Cg=="},{"version":3,"sources":["basic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiOA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"basic.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div id=\"basic\">\r\n\r\n    <div id=\"form-container\">\r\n      <h4 class=\"text__title\">Форма</h4>\r\n      <form id=\"result\">\r\n        <fieldset ref=\"x\" title=\"Значение параметра x должно быть целым числом в пределах -4 до 4\">\r\n          <label>x</label>\r\n          <select v-model=\"result.x\" required=\"true\">\r\n            <option v-for=\"value in xValues\" >{{ value }}</option>\r\n          </select>\r\n        </fieldset>\r\n\r\n        <fieldset ref=\"y\" title=\"Значение параметра y должно быть действительным число в интервале от -5 до 5\">\r\n          <label>y</label>\r\n          <input type=\"text\" placeholder=\"y in (-5, 5)\" v-model=\"result.y\" required=\"true\" />\r\n        </fieldset>\r\n\r\n        <fieldset ref=\"r\" title=\"Значение параметра r должно быть целым числом в пределах от 1 до 4\">\r\n          <label>r</label>\r\n          <select v-model=\"result.r\" required=\"true\">\r\n            <option v-for=\"value in xValues\">{{ value }}</option>\r\n          </select>\r\n        </fieldset>\r\n\r\n        <fieldset class=\"separated\">\r\n          <button @click.prevent=\"check\" class=\"btn\">проверить</button>\r\n        </fieldset>\r\n\r\n      </form>\r\n\r\n    </div>\r\n\r\n    <div id=\"area-container\">\r\n      <canvas id=\"area\" ref=\"area\" width=\"500\" height=\"500\" @click=\"\">\r\n        Canvas not supported\r\n      </canvas>\r\n    </div>\r\n\r\n    <loader v-if=\"isLoading\" />\r\n    <resultscontainer v-bind:results=\"results\" v-else-if=\"results.length\" />\r\n    <p class=\"empty-results\" v-else>результаты отсутствуют</p>\r\n\r\n    <div id=\"close-container\">\r\n      <button @click=\"signout\" class=\"btn\">закрыть сессию</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import resultscontainer from '@/components/temp_base/results_container'\r\n  import loader from '@/components/temp_base/loader'\r\n\r\n  const baseValues = ['1', '2', '3', '4'];\r\n\r\n  export default {\r\n    name: 'basic',\r\n    props: ['accessToken', 'refreshToken', ],\r\n    components: {\r\n      resultscontainer,\r\n      loader,\r\n    },\r\n\r\n    data: function() {\r\n      return {\r\n        rValues: baseValues,\r\n        xValues: ['-4', '-3', '-2', '-1', '0'].concat(baseValues),\r\n        yMinimal: '-5',\r\n        yMaximum: '5',\r\n        result: { x: '', y: '', r: '', },\r\n        results: [],\r\n        isLoading: true\r\n      };\r\n    },\r\n    methods: {\r\n      basedraw: function() {\r\n\r\n      },\r\n      redraw: function(radius) {\r\n\r\n      },\r\n\r\n      testX: function(value) {\r\n        console.log(`x values: ${this.xValues}`);\r\n        return this.xValues.includes(value);\r\n      },\r\n\r\n      testY: function(value) {\r\n        const floatRegex = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\r\n        let float = parseFloat(value);\r\n        console.log(`parsed value: ${float}`);\r\n        const isFloat = floatRegex.test(value);\r\n        console.log(`float?: ${isFloat}`);\r\n        console.log(`not NaN?: ${!isNaN(float)}`);\r\n        const isLess = (float <= this.yMaximum - Number.EPSILON);\r\n        console.log(`less?: ${isLess}`);\r\n        const isMore = (float >= this.yMinimal + Number.EPSILON);\r\n        console.log(`more?: ${isMore}`);\r\n        return isFloat && !isNaN(float) && isLess && isMore;\r\n      },\r\n\r\n      testR: function(value) {\r\n        console.log(`r values: ${this.rValues}`);\r\n        return this.rValues.includes(value);\r\n      },\r\n\r\n      fetchToken: async function(repeat, ...args) {\r\n        console.log(`current access-token expired: ${this.accessToken}`);\r\n        console.log('fetching new one');\r\n\r\n        let response = await fetch(\"/api/refresh/token\", {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n          },\r\n          body: JSON.stringify(this.refreshToken),\r\n        });\r\n\r\n        console.log('check if response is ok');\r\n        if (response.ok) {\r\n\r\n          console.log('successful fetching new tokens');\r\n          console.log('getting json object');\r\n          let json = response.json();\r\n          if (!json) {\r\n\r\n            console.log(`fetched from backend ${ json }`);\r\n            let refreshToken = json.refreshToken;\r\n            console.log(`get refresh token: ${ refreshToken }`);\r\n            let accessToken = json.accessToken;\r\n            console.log(`get access token: ${ accessToken }`);\r\n            this.$emit('update:refreshToken', refreshToken);\r\n            this.$emit('update:accessToken', accessToken);\r\n            repeat = repeat.bind(this);\r\n            repeat(args);\r\n\r\n          } else console.log('empty response body');\r\n\r\n        } else console.log('bad response');\r\n      },\r\n\r\n      check: async function(event) {\r\n        let errorMsg = '';\r\n        console.log('--- x testing ---');\r\n        if (!this.testX(this.result.x))\r\n          errorMsg += this.$refs.x.title + ';\\n';\r\n        console.log('--- y testing ---');\r\n        if (!this.testY(this.result.y))\r\n          errorMsg += this.$refs.y.title + ';\\n';\r\n        console.log('--- r testing ---');\r\n        if (!this.testR(this.result.r))\r\n          errorMsg += this.$refs.r.title + ';\\n';\r\n\r\n        console.log('=== total testing ===');\r\n        if (errorMsg.length) {\r\n          console.log(`Errors[${errorMsg.length}]: ${errorMsg}`);\r\n          alert(errorMsg);\r\n        } else {\r\n          console.log('provided valid data');\r\n          console.log(`sending ${this.result}`);\r\n          console.log('sending data...');\r\n\r\n          let response = await fetch(\"/main/app/add\", {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json;charset=utf-8',\r\n              'shell_token': this.accessToken,\r\n            },\r\n            body: JSON.stringify(this.result)\r\n          });\r\n\r\n          console.log('request sent checking if response is ok (201)');\r\n          if (response.status === 201)\r\n            console.log('response is ok (201)');\r\n          else if (response.status === 403) {\r\n            console.log('access token expired');\r\n            this.fetchToken(this.check, event);\r\n          } else\r\n            console.log('bad response');\r\n          console.log(`response status: ${response.status}`);\r\n        }\r\n      },\r\n\r\n      signout: function(event) {\r\n        console.log('close current session...');\r\n        this.$emit('update:accessToken', '');\r\n        this.$emit('update:refreshToken', '')\r\n      },\r\n\r\n      retrieve: async function() {\r\n        console.log('getting results with unique token');\r\n\r\n        let response = await fetch(\"/main/app/dots/all\", {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            'shell_token': this.accessToken,\r\n          },\r\n          body: JSON.stringify(this.accessToken)\r\n        });\r\n\r\n        console.log('check if response is ok');\r\n        if (response.ok) {\r\n          console.log('response is ok');\r\n          console.log('getting the json object');\r\n          let json = response.json();\r\n          this.results = json;\r\n        } else if (response.status === 403) {\r\n          console.log('access token expired');\r\n          this.fetchToken(this.retrieve)\r\n        } else {\r\n          console.log('bad response');\r\n          console.log(`response status: ${response.status}`);\r\n          this.results = [];\r\n        }\r\n        this.isLoading = false;\r\n      },\r\n    },\r\n    mounted() {\r\n      this.retrieve(this.accessToken);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  @import url('https://fonts.googleapis.com/css2?family=Lato&display=swap');\r\n\r\n  #basic {\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n\r\n  #area {\r\n    width: 1245px;\r\n  }\r\n\r\n  .btn {\r\n    border: 0;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    letter-spacing: .5px;\r\n    margin: 2% 2%;\r\n    padding: 11px 30px;\r\n    background-color: #3e606f;\r\n    color: #eaeaea;\r\n    font-family: Lato, Roboto, \"Open Sans\", Helvetica, sans-serif;\r\n    text-transform: capitalize;\r\n    font-size: 18px;\r\n  }\r\n\r\n  .btn:hover {\r\n    background-color: #5e808f;\r\n  }\r\n\r\n  #form-container {\r\n    display: block;\r\n    width: 45%;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  #result input, select {\r\n    border: 1px solid #c6c9cc;\r\n    border-radius: 5px;\r\n    color: #555;\r\n    display: block;\r\n    margin: 1% 0 4% 0;\r\n    padding: 1% 2%;\r\n  }\r\n\r\n  .separated {\r\n    text-align: center;\r\n  }\r\n\r\n\r\n  #close-container {\r\n    text-align: center;\r\n  }\r\n\r\n  #result label {\r\n    color: #3e606f;\r\n    font-family: Lato, Roboto, \"Open Sans\", Helvetica, sans-serif;\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  #result fieldset {\r\n    border: 1px solid #c6c9cc;\r\n    border-radius: 5px;\r\n    margin: 2% 0;\r\n  }\r\n\r\n  .text__title {\r\n    font-size: 24px;\r\n    line-height: 44px;\r\n    color: #3e606f;\r\n    margin: 0;\r\n    font-family: Lato, Roboto, \"Open Sans\", Helvetica, sans-serif;\r\n  }\r\n\r\n  .text__title {\r\n      font-size: 16px;\r\n      line-height: 22px;\r\n    }\r\n\r\n    #area {\r\n      width: 320px;\r\n    }\r\n\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n\r\n    .empty-results {\r\n      text-align: center;\r\n      font-size: 24px;\r\n      line-height: 44px;\r\n      color: #3e606f;\r\n      margin: 0;\r\n      font-family: Lato, Roboto, \"Open Sans\", Helvetica, sans-serif;\r\n    }\r\n\r\n  @media only all and (min-width: 643px) and (max-width: 1244px) {\r\n\r\n    .text__title {\r\n      font-size: 18px;\r\n      line-height: 32px;\r\n    }\r\n\r\n    #area {\r\n      width: 643px;\r\n    }\r\n\r\n    .btn {\r\n      font-size: 14px;\r\n    }\r\n\r\n    .empty-results {\r\n      font-size: 18px;\r\n      line-height: 32px;\r\n    }\r\n  }\r\n\r\n  @media only all and (max-width: 642px) {\r\n    #result {\r\n      display: block;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .empty-results {\r\n      font-size: 12;\r\n      line-height: 22px;\r\n    }\r\n  }\r\n</style>"]}]}