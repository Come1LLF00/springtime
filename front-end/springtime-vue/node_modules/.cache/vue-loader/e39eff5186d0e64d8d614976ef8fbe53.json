{"remainingRequest":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\src\\components\\temp_startup\\loging.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\src\\components\\temp_startup\\loging.vue","mtime":1606786319310},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1MYXRvJmRpc3BsYXk9c3dhcCcpOwoKI2xvZ2luZyB7CiAgZGlzcGxheTogYmxvY2s7CiAgd2lkdGg6IDQ1JTsKICBtYXJnaW46IDAgYXV0bzsKfQoKI2xvZ2luLWZvcm0gaW5wdXQgewogIGJvcmRlcjogMXB4IHNvbGlkICNjNmM5Y2M7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGNvbG9yOiAjNTU1OwogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbjogMSUgMCA0JSAwOwogIHBhZGRpbmc6IDElIDIlOwp9CgojbG9naW4tZm9ybSBsYWJlbCB7CiAgY29sb3I6ICMzZTYwNmY7CiAgZm9udC1mYW1pbHk6IExhdG8sIFJvYm90bywgIk9wZW4gU2FucyIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsKICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsKfQoKI2xvZ2luLWZvcm0gZmllbGRzZXQgewogIGJvcmRlcjogMXB4IHNvbGlkICNjNmM5Y2M7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIG1hcmdpbjogMiUgMDsKfQoKLmJ0biB7CiAgYm9yZGVyOiAwOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGxldHRlci1zcGFjaW5nOiAuNXB4OwogIG1hcmdpbjogMiUgMiU7CiAgcGFkZGluZzogMiUgNSU7CiAgYmFja2dyb3VuZC1jb2xvcjogIzNlNjA2ZjsKICBjb2xvcjogI2VhZWFlYTsKfQoKLmJ0bjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzVlODA4ZjsKfQoKLnNlcGFyYXRlZCB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgpAbWVkaWEgb25seSBhbGwgYW5kIChtYXgtd2lkdGg6IDY0MnB4KSB7CiAgI2xvZ2luZyB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHdpZHRoOiA5MCU7CiAgfQp9Cg=="},{"version":3,"sources":["loging.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"loging.vue","sourceRoot":"src/components/temp_startup","sourcesContent":["<template>\r\n  <div id=\"loging\">\r\n\t  <form id=\"login-form\">\r\n      <fieldset>\r\n        <label>логин</label>\r\n        <input type=\"text\" placeholder=\"имя пользователя\" title=\"имя пользователя\" v-model=\"user.login\" required=\"true\" autocomplete=\"username\">\r\n      </fieldset>\r\n\r\n      <fieldset>\r\n        <label>пароль</label>\r\n        <input type=\"password\" placeholder=\"пароль\" title=\"пароль\" v-model=\"user.password\" required=\"true\" autocomplete=\"current-password\">\r\n      </fieldset>\r\n\r\n      <fieldset class=\"separated\">\r\n        <button @click=\"signin\" title=\"Кнопка для входа в существующий аккаунт\" class=\"btn\">Войти</button>\r\n        <button @click=\"signup\" title=\"Кнопка для создания нового аккаунта\" class=\"btn\">Зарегистрироваться</button>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'loging',\r\n    data: function() {\r\n      return { \r\n        user: {\r\n          login: '',\r\n          password: '',\r\n        },\r\n      };\r\n    },\r\n\r\n\r\n    methods: {\r\n      signin: async function(event) {\r\n        console.log('sign in account:');\r\n        console.log(`user: ${this.user}`);\r\n\r\n        let response = await fetch(\"api/aunt/sign_in\", {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n          },\r\n          body: JSON.stringify(this.user)\r\n        });\r\n\r\n        console.log('check if response is ok (200)');\r\n        if (response.ok) {\r\n          console.log('response 200; get token');\r\n          let json = response.json();\r\n          console.log(`response body: ${json}`);\r\n          if (!json)\r\n            console.log('bad data: expected { accessToken, refreshToken }');\r\n          else {\r\n            let accessToken = json.accessToken;\r\n            let refreshToken = json.refreshToken;\r\n            console.log(`get user access-token: ${accessToken}`);\r\n            console.log(`get user refresh-token: ${refreshToken}`);\r\n            console.log('invokating tokens change');\r\n            this.$emit('update:accessToken', accessToken);\r\n            this.$emit('update:refreshToken', refreshToken);\r\n          }\r\n        }\r\n      },\r\n\r\n      signup: async function(event) {\r\n        console.log('sign up new account:');\r\n        console.log(`user: ${this.user}`);\r\n\r\n        let response = await fetch('api/aunt/register', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n          },\r\n          body: JSON.stringify(this.user)\r\n        });\r\n\r\n        console.log('sent request')\r\n        console.log('check if status 201');\r\n\r\n        if (response.status === 201) {\r\n          console.log('user created');\r\n          let json = response.json();\r\n          console.log(`response body: ${json}`);\r\n          if (!json)\r\n            console.log('bad data: expected { accessToken, refreshToken }');\r\n          else {\r\n            let accessToken = json.accessToken;\r\n            let refreshToken = json.refreshToken;\r\n            console.log(`get user access-token: ${accessToken}`);\r\n            console.log(`get user refresh-token: ${refreshToken}`);\r\n            console.log('invokating tokens change');\r\n            this.$emit('update:accessToken', accessToken);\r\n            this.$emit('update:refreshToken', refreshToken);\r\n          }\r\n        }\r\n      },\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  @import url('https://fonts.googleapis.com/css2?family=Lato&display=swap');\r\n\r\n  #loging {\r\n    display: block;\r\n    width: 45%;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  #login-form input {\r\n    border: 1px solid #c6c9cc;\r\n    border-radius: 5px;\r\n    color: #555;\r\n    display: block;\r\n    margin: 1% 0 4% 0;\r\n    padding: 1% 2%;\r\n  }\r\n\r\n  #login-form label {\r\n    color: #3e606f;\r\n    font-family: Lato, Roboto, \"Open Sans\", Helvetica, sans-serif;\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  #login-form fieldset {\r\n    border: 1px solid #c6c9cc;\r\n    border-radius: 5px;\r\n    margin: 2% 0;\r\n  }\r\n\r\n  .btn {\r\n    border: 0;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    letter-spacing: .5px;\r\n    margin: 2% 2%;\r\n    padding: 2% 5%;\r\n    background-color: #3e606f;\r\n    color: #eaeaea;\r\n  }\r\n\r\n  .btn:hover {\r\n    background-color: #5e808f;\r\n  }\r\n\r\n  .separated {\r\n    text-align: center;\r\n  }\r\n\r\n  @media only all and (max-width: 642px) {\r\n    #loging {\r\n      display: block;\r\n      width: 90%;\r\n    }\r\n  }\r\n</style>"]}]}