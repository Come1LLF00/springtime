{"remainingRequest":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\src\\components\\basic.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\src\\components\\basic.vue","mtime":1606825984591},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Fun\\itmo_labs\\c2\\web\\springtime\\front-end\\springtime-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["basic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"basic.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div id=\"basic\">\r\n    <div id=\"container\">\r\n      <div id=\"form-container\">\r\n        <h4 class=\"text__title\">Форма</h4>\r\n        <form id=\"result\">\r\n          <fieldset ref=\"x\" title=\"Значение параметра x должно быть целым числом в пределах -4 до 4\">\r\n            <label>x</label>\r\n            <select v-model=\"result.x\" required=\"true\">\r\n              <option v-for=\"value in xValues\" >{{ value }}</option>\r\n            </select>\r\n          </fieldset>\r\n          <fieldset ref=\"y\" title=\"Значение параметра y должно быть действительным число в интервале от -5 до 5\">\r\n            <label>y</label>\r\n            <input type=\"text\" placeholder=\"y in (-5, 5)\" v-model=\"result.y\" required=\"true\" />\r\n          </fieldset>\r\n          <fieldset ref=\"r\" title=\"Значение параметра r должно быть целым числом в пределах от 1 до 4\">\r\n            <label>r</label>\r\n            <select v-model=\"result.r\" required=\"true\">\r\n              <option v-for=\"value in xValues\">{{ value }}</option>\r\n            </select>\r\n          </fieldset>\r\n          <fieldset class=\"separated\">\r\n            <button @click.prevent=\"check\" class=\"btn\">проверить</button>\r\n          </fieldset>\r\n        </form>\r\n\r\n      </div>\r\n      <div id=\"area-container\">\r\n        <h4 class=\"text__title\">Рабочая область</h4>\r\n        <canvas id=\"area\" ref=\"area\" width=\"643\" height=\"643\" @click=\"checkArea\">\r\n          Canvas not supported\r\n        </canvas>\r\n      </div>\r\n    </div>\r\n    <loader v-if=\"isLoading\" /><resultscontainer v-bind:results=\"results\" v-else-if=\"results.length\" />\r\n    <p class=\"empty-results\" v-else>результаты отсутствуют</p><div id=\"close-container\">\r\n      <button @click=\"signout\" class=\"btn\">закрыть сессию</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import resultscontainer from '@/components/temp_base/results_container'\r\n  import loader from '@/components/temp_base/loader'\r\n\r\n  const baseValues = ['1', '2', '3', '4'];\r\n  const maxRadius = Math.max(...baseValues);\r\n  const part = 0.45;\r\n\r\n  export default {\r\n    name: 'basic',\r\n    props: ['accessToken', 'refreshToken', ],\r\n    components: {\r\n      resultscontainer,\r\n      loader,\r\n    },\r\n\r\n    data: function() {\r\n      return {\r\n        rValues: baseValues,\r\n        xValues: ['-4', '-3', '-2', '-1', '0'].concat(baseValues),\r\n        yMinimal: '-5',\r\n        yMaximum: '5',\r\n        result: { x: '', y: '', r: '', },\r\n        results: [],\r\n        isLoading: true\r\n      };\r\n    },\r\n    computed: {\r\n      radius: function() {\r\n        return this.result.r;\r\n      },\r\n    },\r\n    watch: {\r\n      radius: function(value) {\r\n        this.redraw(value);\r\n      },\r\n      results: function(value) {\r\n        this.drawDots(value);\r\n      }\r\n    },\r\n    methods: {\r\n      translateTo: function(realCoordinate, fieldSize, length, proportion) {\r\n        return length * (realCoordinate - fieldSize / 2) / (fieldSize * proportion);\r\n      },\r\n      translateFrom: function(imagCoordinate, fieldSize, length, proportion) {\r\n        return fieldSize * (imagCoordinate * proportion / length + 0.5);\r\n      },\r\n\r\n      drawRectangle(ctx, x, y, radius) {\r\n        ctx.fillRect(x - radius, y, radius, radius / 2);\r\n      },\r\n\r\n      drawTriangle(ctx, x, y, radius) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x, y - radius);\r\n        ctx.lineTo(x + radius / 2, y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n      },\r\n\r\n      drawQuadrant(ctx, x, y, radius) {\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius / 2, 0, Math.PI / 2, false);\r\n        ctx.lineTo(x, y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n      },\r\n\r\n      drawArea: function(canvas, ctx, x, y, radius) {\r\n        ctx.strokeStyle = '#3399FF';\r\n        ctx.fillStyle = '#3399FF';\r\n        console.log(`canvas: ${ canvas }, ctx: ${ ctx }, x: ${ x }, y: ${ y }, radius: ${ radius }`);\r\n        console.log('drawing rectangle');\r\n        this.drawRectangle(ctx, x, y, radius);\r\n        console.log('drawing triangle');\r\n        this.drawTriangle(ctx, x, y, radius);\r\n        console.log('drawing quadrant');\r\n        this.drawQuadrant(ctx, x, y, radius);\r\n      },\r\n\r\n      drawVerticalLine: function(ctx, x, y, length) {\r\n        ctx.fillRect(x, y, 2, length);\r\n      },\r\n\r\n      drawHorizontalLine: function(ctx, x, y, length) {\r\n        ctx.fillRect(x, y, length, 2);\r\n      },\r\n\r\n      drawLines: function(ctx, x, y, length) {\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.fillStyle = '#000000';\r\n        console.log('draw horizontal line');\r\n        this.drawHorizontalLine(ctx, 0, y, length);\r\n        console.log('draw vertical line');\r\n        this.drawVerticalLine(ctx, x, 0, length);\r\n      },\r\n      drawHorizontalArrow: function(ctx, x, y, length) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x - length, y - length / 2);\r\n        ctx.lineTo(x - length, y + length / 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      },\r\n\r\n      drawSignedHorizontalArrow: function(ctx, x, y, length, text) {\r\n        ctx.fillText(text, x - length, y - length);\r\n        this.drawHorizontalArrow(ctx, x, y, length);\r\n      },\r\n\r\n      drawVerticalArrow: function(ctx, x, y, length) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x - length / 2, y + length);\r\n        ctx.lineTo(x + length / 2, y + length);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      },\r\n\r\n      drawSignedVerticalArrow: function(ctx, x, y, length, text) {\r\n        ctx.fillText(text, x + length, y + length);\r\n        this.drawVerticalArrow(ctx, x, y, length);\r\n      },\r\n\r\n      drawArrows: function(ctx, x, y, length) {\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.fillStyle = '#000000';\r\n        console.log('drawing horizontal arrow');\r\n        this.drawHorizontalArrow(ctx, x, 0, length);\r\n        console.log('drawing vertical arrow');\r\n        this.drawVerticalArrow(ctx, 2 * x, y, length);\r\n      },\r\n      drawSignedArrows: function(ctx, x, y, length) {\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.fillStyle = '#000000';\r\n        console.log('drawing signed horizontal arrow');\r\n        this.drawSignedHorizontalArrow(ctx, 2 * x, y, length, 'y');\r\n        console.log('drawing signed vertical arrow');\r\n        this.drawSignedVerticalArrow(ctx, x, 0, length, 'x');\r\n      },\r\n\r\n      drawSignedHorizontalNotch: function(ctx, x, y, length, text) {\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.fillStyle = '#000000';\r\n        ctx.fillText(text, x + length, y + length / 2);\r\n        this.drawHorizontalLine(ctx, x - length / 2, y, length);\r\n      },\r\n      drawSignedVerticalNotch: function(ctx, x, y, length, text) {\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.fillStyle = '#000000';\r\n        ctx.fillText(text, x - length, y - length);\r\n        this.drawVerticalLine(ctx, x, y - length / 2, length);\r\n      },\r\n      tempdraw: function(title) {\r\n        console.log('drawing template');\r\n        let canvas = this.$refs.area;\r\n        let ctx = canvas.getContext('2d');\r\n        let width = canvas.width;\r\n        let height = canvas.height;\r\n        let radius = width * part;\r\n        console.log(`canvas: (${width}:${height})`);\r\n\r\n        const fontName = 'sans-serif';\r\n        const textSize = width / 38;\r\n        ctx.font = `${textSize}px ${fontName}`;\r\n\r\n        console.log('clearing canvas');\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        console.log('drawing working area');\r\n        this.drawArea(canvas, ctx, width / 2, height / 2, radius);\r\n\r\n        console.log('drawing coordinate lines');\r\n        this.drawLines(ctx, width / 2, height / 2, width);\r\n\r\n        console.log('drawing direction arrows');\r\n        this.drawSignedArrows(ctx, width / 2, height / 2, radius / 20);\r\n\r\n        console.log('drawing notches');\r\n\r\n        console.log('drawing horizontal notches');\r\n        this.drawSignedHorizontalNotch(ctx, width / 2, height / 2 + radius, radius / 20, '-R');\r\n        this.drawSignedHorizontalNotch(ctx, width / 2, height / 2 + radius / 2, radius / 20, '-R/2');\r\n        this.drawSignedHorizontalNotch(ctx, width / 2, height / 2 - radius / 2, radius / 20, 'R/2');\r\n        this.drawSignedHorizontalNotch(ctx, width / 2, height / 2 - radius, radius / 20, 'R');\r\n\r\n        console.log('drawing vertical notches');\r\n        this.drawSignedVerticalNotch(ctx, width / 2 - radius, height / 2, radius / 20, '-R');\r\n        this.drawSignedVerticalNotch(ctx, width / 2 - radius / 2, height / 2, radius / 20, '-R/2');\r\n        this.drawSignedVerticalNotch(ctx, width / 2 + radius / 2, height / 2, radius / 20, 'R/2');\r\n        this.drawSignedVerticalNotch(ctx, width / 2 + radius, height / 2, radius / 20, 'R');\r\n\r\n        console.log('template drew');\r\n\r\n      },\r\n      basedraw: function(title) {\r\n        console.log('drawing with real radius');\r\n        let canvas = this.$refs.area;\r\n        let ctx = canvas.getContext('2d');\r\n        let width = canvas.width;\r\n        let height = canvas.height;\r\n        let radius = width * part;\r\n\r\n        console.log(`canvas: (${width}:${height})`);\r\n\r\n        const fontName = 'sans-serif';\r\n        const textSize = width / 38;\r\n        ctx.font = `${textSize}px ${fontName}`;\r\n\r\n        console.log('clearing canvas');\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        console.log('drawing working area');\r\n        this.drawArea(canvas, ctx, width / 2, height / 2, title * radius / maxRadius);\r\n\r\n        console.log('drawing coordinate lines');\r\n        this.drawLines(ctx, width / 2, height / 2, width);\r\n\r\n        console.log('drawing direction arrows');\r\n        this.drawSignedArrows(ctx, width / 2, height / 2, radius / 20);\r\n\r\n        console.log('drawing notches');\r\n\r\n        console.log('drawing horizontal notches');\r\n        for (let i = -4; i <= 4; i += 0.5) {\r\n          let start = height / 2 + radius;\r\n          let step = 2 * radius / 8;\r\n          if (i === 0)\r\n            continue;\r\n          this.drawSignedHorizontalNotch(ctx, width / 2, start - (maxRadius + i) * step, radius / 20, i + '');\r\n        }\r\n\r\n        console.log('drawing vertical notches');\r\n        for (let i = -4; i <= 4; i += 0.5) {\r\n          let start = width / 2 - radius;\r\n          let step = 2 * radius / 8;\r\n          this.drawSignedVerticalNotch(ctx, start + (maxRadius + i) * step, height / 2, radius / 20, i + '');\r\n        }\r\n\r\n        console.log('basic drew');\r\n      },\r\n      redraw: function(radius) {\r\n        if (!radius || radius <= 0)\r\n          this.tempdraw('R');\r\n        else this.basedraw(radius);\r\n      },\r\n\r\n      testX: function(value) {\r\n        console.log(`x values: ${this.xValues}`);\r\n        return this.xValues.includes(value);\r\n      },\r\n\r\n      testY: function(value) {\r\n        const floatRegex = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\r\n        let float = parseFloat(value);\r\n        console.log(`parsed value: ${float}`);\r\n        const isFloat = floatRegex.test(value);\r\n        console.log(`float?: ${isFloat}`);\r\n        console.log(`not NaN?: ${!isNaN(float)}`);\r\n        const isLess = (float <= this.yMaximum - Number.EPSILON);\r\n        console.log(`less?: ${isLess}`);\r\n        const isMore = (float >= this.yMinimal + Number.EPSILON);\r\n        console.log(`more?: ${isMore}`);\r\n        return isFloat && !isNaN(float) && isLess && isMore;\r\n      },\r\n\r\n      testR: function(value) {\r\n        console.log(`r values: ${this.rValues}`);\r\n        return this.rValues.includes(value);\r\n      },\r\n\r\n      fetchToken: async function(repeat, ...args) {\r\n        console.log(`current access-token expired: ${this.accessToken}`);\r\n        console.log('fetching new one');\r\n\r\n        let response = await fetch(\"/api/refresh/token\", {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n          },\r\n          body: JSON.stringify(this.refreshToken),\r\n        });\r\n\r\n        console.log('check if response is ok');\r\n        if (response.ok) {\r\n\r\n          console.log('successful fetching new tokens');\r\n          console.log('getting json object');\r\n          let json = response.json();\r\n          if (!json) {\r\n\r\n            console.log(`fetched from backend ${ json }`);\r\n            let refreshToken = json.refreshToken;\r\n            console.log(`get refresh token: ${ refreshToken }`);\r\n            let accessToken = json.accessToken;\r\n            console.log(`get access token: ${ accessToken }`);\r\n            this.$emit('update:refreshToken', refreshToken);\r\n            this.$emit('update:accessToken', accessToken);\r\n            repeat = repeat.bind(this);\r\n            repeat(args);\r\n\r\n          } else console.log('empty response body');\r\n\r\n        } else console.log('bad response');\r\n      },\r\n\r\n      fetchResult: async function() {\r\n        console.log('provided valid data');\r\n        console.log(`sending ${this.result}`);\r\n        console.log('sending data...');\r\n\r\n        let response = await fetch(\"/main/app/add\", {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            'shell_token': this.accessToken,\r\n          },\r\n          body: JSON.stringify(this.result)\r\n        });\r\n\r\n        console.log('request sent checking if response is ok (201)');\r\n        if (response.status === 201)\r\n          console.log('response is ok (201)');\r\n        else if (response.status === 403) {\r\n          console.log('access token expired');\r\n          this.fetchToken(this.fetchResult);\r\n        } else\r\n          console.log('bad response');\r\n        console.log(`response status: ${response.status}`);\r\n      },\r\n\r\n      drawDots: function(results) {\r\n        console.log(`${ results }`);\r\n        if (!results.length)\r\n          console.log('no any results in the table');\r\n        else {\r\n          this.result.r = results[0].r;\r\n          const out = 5;\r\n          let canvas = this.$refs.area;\r\n          let ctx = canvas.getContext('2d');\r\n          let width = canvas.width;\r\n          let height = canvas.height;\r\n          for (let i = 0; i < results.length; ++i) {\r\n            console.log(`putting dot: ${results[i]}`);\r\n            console.log(`x: ${ results[i].x }; y: ${ results[i].y }`);\r\n            ctx.fillSyle = results[i].hit? \"#000000\" : \"#cd0000\";\r\n            console.log('translating coordinates');\r\n            const realX = this.translateFrom(results[i].x, width, maxRadius, part);\r\n            const realY = this.translateFrom(-results[i].y, height, maxRadius,part);\r\n            console.log(`translated: x: ${ realX } y: ${ realY }`);\r\n\r\n            console.log('putting dots');\r\n            ctx.beginPath();\r\n            ctx.arc(realX, realY, maxRadius, 0, 2*Math.PI, true);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n          }\r\n        }\r\n      },\r\n\r\n      check: async function(event) {\r\n        let errorMsg = '';\r\n        console.log('--- x testing ---');\r\n        if (!this.testX(this.result.x))\r\n          errorMsg += this.$refs.x.title + ';\\n';\r\n        console.log('--- y testing ---');\r\n        if (!this.testY(this.result.y))\r\n          errorMsg += this.$refs.y.title + ';\\n';\r\n        console.log('--- r testing ---');\r\n        if (!this.testR(this.result.r))\r\n          errorMsg += this.$refs.r.title + ';\\n';\r\n\r\n        console.log('=== total testing ===');\r\n        if (errorMsg.length) {\r\n          console.log(`Errors[${errorMsg.length}]: ${errorMsg}`);\r\n          alert(errorMsg);\r\n        } else {\r\n          console.log('fetching new result');\r\n          this.fetchResult();\r\n        }\r\n      },\r\n\r\n      checkArea: async function(event) {\r\n        console.log(`current radius: ${this.result.r }`);\r\n        console.log('check if radius set');\r\n        if (!this.result.r) {\r\n          console.log('radius not set');\r\n          alert('Не установлено свойство радиуса области');\r\n        }\r\n        else if (!this.testR(this.result.r)) {\r\n          console.log('invalid radius value');\r\n          alert(this.$refs.r.title);\r\n        }\r\n        else {\r\n          console.log('valid radius value');\r\n          let area = this.$refs.area;\r\n          const rect = area.getBoundingClientRect();\r\n          console.log(`canvas: (${area.width}:${area.height})`);\r\n\r\n          console.log('getting x coordinate');\r\n          const realX = event.clientX - rect.left;\r\n          console.log(`mouse x: ${ realX }`);\r\n\r\n          console.log('translating to x value');\r\n          const x = this.translateTo(realX, area.width, maxRadius, part);\r\n          console.log(`x translated to: ${ x }`);\r\n          this.result.x = x;\r\n\r\n          console.log('getting y coordinate');\r\n          const realY = event.clientY - rect.top;\r\n          console.log(`mouse y: ${ realY }`);\r\n\r\n          console.log('translating to y value');\r\n          const y = this.translateTo(realY, area.height, maxRadius, part);\r\n          console.log(`y translated to: ${ y }`);\r\n          this.result.y = y;\r\n\r\n          console.log('fetching new result');\r\n          this.fetchResult();\r\n        }\r\n      },\r\n\r\n      signout: function(event) {\r\n        console.log('close current session...');\r\n        this.$emit('update:accessToken', '');\r\n        this.$emit('update:refreshToken', '')\r\n      },\r\n\r\n      retrieve: async function() {\r\n        console.log('getting results with unique token');\r\n\r\n        let response = await fetch(\"/main/app/dots/all\", {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            'shell_token': this.accessToken,\r\n          },\r\n          body: JSON.stringify(this.accessToken)\r\n        });\r\n\r\n        console.log('check if response is ok');\r\n        if (response.ok) {\r\n          console.log('response is ok');\r\n          console.log('getting the json object');\r\n          let json = response.json();\r\n          this.results = json;\r\n        } else if (response.status === 403) {\r\n          console.log('access token expired');\r\n          this.fetchToken(this.retrieve)\r\n        } else {\r\n          console.log('bad response');\r\n          console.log(`response status: ${response.status}`);\r\n          this.results = [ { date: new Date(), time: 0, x: 4, y: 4, r: 4, hit: true }];\r\n        }\r\n        this.isLoading = false;\r\n      },\r\n    },\r\n    mounted() {\r\n      this.retrieve();\r\n      this.redraw(this.radius);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  @import url('https://fonts.googleapis.com/css2?family=Lato&display=swap');\r\n\r\n  #basic {\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  #area {\r\n    width: 90%;\r\n    height: auto;\r\n  }\r\n\r\n  #container {\r\n    display: block;\r\n  }\r\n\r\n  #area-container {\r\n    display: block;\r\n    width: 45%;\r\n    margin: 2% auto;\r\n    text-align: center;\r\n  }\r\n\r\n  #form-container {\r\n    display: block;\r\n    width: 45%;\r\n    margin: 2% auto;\r\n  }\r\n\r\n  .btn {\r\n    border: 0;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    letter-spacing: .5px;\r\n    margin: 2% 2%;\r\n    padding: 11px 30px;\r\n    background-color: #3e606f;\r\n    color: #eaeaea;\r\n    font-family: Lato, Roboto, \"Open Sans\", Helvetica, sans-serif;\r\n    text-transform: capitalize;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .btn:hover {\r\n    background-color: #5e808f;\r\n  }\r\n\r\n  #area-container {\r\n    border: 1px solid #c6c9cc;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  #form-container {\r\n  }\r\n\r\n  #result input, select {\r\n    border: 1px solid #c6c9cc;\r\n    border-radius: 5px;\r\n    color: #555;\r\n    display: block;\r\n    margin: 1% 0 4% 0;\r\n    padding: 1% 2%;\r\n  }\r\n\r\n  .separated {\r\n    text-align: center;\r\n  }\r\n\r\n\r\n  #close-container {\r\n    text-align: center;\r\n  }\r\n\r\n  #result label {\r\n    color: #3e606f;\r\n    font-family: Lato, Roboto, \"Open Sans\", Helvetica, sans-serif;\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  #result fieldset {\r\n    border: 1px solid #c6c9cc;\r\n    border-radius: 5px;\r\n    margin: 2% 0;\r\n  }\r\n\r\n  .text__title {\r\n    font-size: 16px;\r\n    line-height: 44px;\r\n    color: #3e606f;\r\n    margin: 0;\r\n    font-family: Lato, Roboto, \"Open Sans\", Helvetica, sans-serif;\r\n  }\r\n\r\n  .empty-results {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    line-height: 44px;\r\n    color: #3e606f;\r\n    margin: 0;\r\n    font-family: Lato, Roboto, \"Open Sans\", Helvetica, sans-serif;\r\n  }\r\n\r\n  @media only all and (min-width: 1245px) {\r\n  }\r\n\r\n  @media only all and (min-width: 643px) and (max-width: 1244px) {\r\n\r\n    .text__title {\r\n      font-size: 18px;\r\n      line-height: 32px;\r\n    }\r\n\r\n    .btn {\r\n      font-size: 14px;\r\n    }\r\n\r\n    .empty-results {\r\n      font-size: 18px;\r\n      line-height: 32px;\r\n    }\r\n  }\r\n\r\n  @media only all and (max-width: 642px) {\r\n    #result {\r\n      display: block;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .empty-results {\r\n      font-size: 12;\r\n      line-height: 22px;\r\n    }\r\n  }\r\n</style>"]}]}